{"version":3,"file":"static/js/923.f0ac72cc.chunk.js","mappings":"sRAGaA,GAAOC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,yUAgBJE,EAAUF,EAAAA,GAAAA,IAAH,0IAOPG,EAAUH,EAAAA,GAAAA,IAAH,8IAOPI,EAAQJ,EAAAA,GAAAA,GAAH,2C,uGC/BLK,EAAOL,EAAAA,GAAAA,GAAH,2EAKJM,EAAON,EAAAA,GAAAA,EAAH,kE,0KCFJO,EAAc,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAClBC,EAA2CC,EAAAA,EAAAA,WAA/BC,EAA+BD,EAAAA,EAAAA,cAAhBE,EAAgBF,EAAAA,EAAAA,YAEnD,OACI,wBACCF,EAAMK,OAAS,GAAKL,EAAMM,KAAI,YAA+D,IAA5DC,EAA2D,EAA3DA,GAAIC,EAAuD,EAAvDA,OAA0BC,EAA6B,EAA/CC,eAAkBD,YAAeE,EAAc,EAAdA,QACrEC,EAAuB,OAAhBH,EAAwBN,EAAgBM,EAAYI,SAAS,UACtEJ,EAAYK,QAAQ,IAAK,IADwB,UACdb,EAAaG,EAAcK,GAElE,OACI,SAAC,IAAD,WACI,UAAC,KAAD,YACI,gBAAKG,IAAKA,EAAKG,IAAKP,EAAQQ,MAAM,SAClC,UAAC,KAAD,YACI,wBAAKR,KACL,uBAAIG,WALLJ,EASlB,KAGR,E,SCQD,EA5BgB,WACd,OAA0BU,EAAAA,EAAAA,UAAS,MAAnC,eAAOjB,EAAP,KAAckB,EAAd,KAEMC,GADWC,EAAAA,EAAAA,MACQC,MAAMd,GAiB/B,OAfAe,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAa,IAAIC,gBACvB,KACE,mCAAC,oGACqBC,EAAAA,EAAAA,kBAA6BN,GADlD,OACOnB,EADP,OAECkB,EAASlB,GAFV,2CAAD,sDAMD,CAFC,MAAO0B,GACPC,QAAQD,MAAMA,EACf,CACD,OAAO,WACLH,EAAWK,OACZ,CACF,GAAE,CAACT,IAECnB,EAGHA,EAAM6B,QAAQxB,OAAS,GAAI,SAAC,IAAD,WAAS,SAACN,EAAD,CAAaC,MAAOA,EAAM6B,aAC5D,SAAC,IAAD,2DAJe,IAMpB,C","sources":["components/MoviesDetails/MoviesDetails.styled.jsx","components/Reviews/Reviews.styled.jsx","components/Reviews/ReviewsList.jsx","pages/Reviews.jsx"],"sourcesContent":["import { NavLink } from \"react-router-dom\";\nimport styled from \"styled-components\"\n\nexport const Link = styled(NavLink)`\n    display: inline-block;\n    font-weight: 600;\n    padding: 10px 16px;\n    opacity: 0.6;\n    text-decoration: none;\n    color: rgba(14, 14, 14, 0.885);\n    transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    cursor: pointer;\n    outline: none;\n\n     &:hover {\n    opacity: 1;\n    }\n`;\n\nexport const CardBox = styled.div`\n    display: flex;\n    align-items: flex-start;\n    justify-content: center;\n    gap: 10px;\n    width: 100%;\n`\nexport const TextBox = styled.div`\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n    justify-content: space-evenly;\n    width: 60%;\n`\nexport const Title = styled.h2`\n  font-size: 16px;\n`","import styled from \"styled-components\";\n\nexport const Item = styled.li`\n&:not(:last-child) {\n    margin-bottom: 20px;\n}\n`\nexport const Text = styled.p`\nmargin-left: 200px;\nmargin-bottom: 20px;\n`","import PropTypes from 'prop-types';\nimport { posterParam } from '../../config'\nimport { CardBox, TextBox } from \"../MoviesDetails//MoviesDetails.styled\";\nimport { Item } from './Reviews.styled';\n\nexport const ReviewsList = ({ movie }) => {\n    const { postersUrl, altProfileUrl, postersSize } = posterParam;\n\n    return (\n        <ul>\n        {movie.length > 0 && movie.map(({ id, author, author_details: { avatar_path }, content }) => {\n            const src = (avatar_path === null) ? altProfileUrl : avatar_path.includes('/https') ?\n                avatar_path.replace('/', '') : (`${postersUrl + postersSize + avatar_path}`);\n              \n            return (\n                <Item key={id}>\n                    <CardBox>\n                        <img src={src} alt={author} width='100' />\n                        <TextBox>\n                            <h3>{author}</h3>\n                            <p>{content}</p>\n                        </TextBox>\n                    </CardBox>\n                </Item>)\n        })}\n        </ul>\n    )\n}\n\nReviewsList.propTypes = {\n    movie: PropTypes.array.isRequired,\n};","import { useState, useEffect } from \"react\";\nimport { useLocation  } from \"react-router-dom\";\nimport TheMoviedb from \"components/TheMoviedb.API/TheMoviedb.API\";\nimport { ReviewsList } from \"components/Reviews/ReviewsList\";\nimport { Section } from \"components/Layout/Layout.styled\";\nimport { Text } from \"components/Reviews/Reviews.styled\";\n\nconst Reviews = () => {\n  const [movie, setMovie] = useState(null);\n  const location = useLocation();\n  const MovieId = location.state.id;\n\n  useEffect(() => {\n    const controller = new AbortController();\n    try {\n      (async function fetchMovie() {\n        const movie = await TheMoviedb.fetchMovieReviews(MovieId);\n        setMovie(movie)\n      })();\n    } catch (error) {\n      console.error(error);\n    }\n    return () => {\n      controller.abort()\n    };\n  }, [MovieId]);\n  \n  if (!movie) return null;\n\n  return (\n    movie.results.length > 0 ? <Section><ReviewsList movie={movie.results}></ReviewsList></Section> :\n      <Text>We don't have any reviews for this movie :( </Text> \n  );\n}\n\nexport default Reviews;"],"names":["Link","styled","NavLink","CardBox","TextBox","Title","Item","Text","ReviewsList","movie","postersUrl","posterParam","altProfileUrl","postersSize","length","map","id","author","avatar_path","author_details","content","src","includes","replace","alt","width","useState","setMovie","MovieId","useLocation","state","useEffect","controller","AbortController","TheMoviedb","error","console","abort","results"],"sourceRoot":""}