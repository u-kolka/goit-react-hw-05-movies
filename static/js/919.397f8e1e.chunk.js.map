{"version":3,"file":"static/js/919.397f8e1e.chunk.js","mappings":"sRAGaA,GAAOC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,yUAgBJE,EAAUF,EAAAA,GAAAA,IAAH,0IAOPG,EAAUH,EAAAA,GAAAA,IAAH,8IAOPI,EAAQJ,EAAAA,GAAAA,GAAH,2C,uGC/BLK,EAAOL,EAAAA,GAAAA,GAAH,2EAKJM,EAAON,EAAAA,GAAAA,EAAH,kE,0KCFJO,EAAW,SAAC,GAAa,IAAZC,EAAW,EAAXA,MACdC,EAA2CC,EAAAA,EAAAA,WAA/BC,EAA+BD,EAAAA,EAAAA,cAAhBE,EAAgBF,EAAAA,EAAAA,YACnD,OACA,SAAC,KAAD,UACKF,GAASA,EAAMK,KAAKC,KAAI,YAA4C,IAAzCC,EAAwC,EAAxCA,GAAIC,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,aAAcC,EAAgB,EAAhBA,UAC9CC,EAAwB,OAAjBF,EAAyBN,EAA1B,UAA8CF,EAAWG,EAAYK,GAC7E,OACI,yBACI,UAAC,KAAD,YACI,gBAAKE,IAAKA,EAAKC,IAAKJ,EAAMK,MAAM,SAChC,UAAC,KAAD,YACI,wBAAKL,IACJE,IAAa,uCAAeA,YALhCH,EAUlB,KAGN,E,kBCUD,EA5Ba,WACX,OAA0BO,EAAAA,EAAAA,UAAS,MAAnC,eAAOd,EAAP,KAAce,EAAd,KAEMC,GADWC,EAAAA,EAAAA,MACQC,MAAMX,GAiB/B,OAfAY,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAa,IAAIC,gBACvB,KACE,mCAAC,oGACqBC,EAAAA,EAAAA,kBAA6BN,GADlD,OACOhB,EADP,OAECe,EAASf,GAFV,2CAAD,sDAMD,CAFC,MAAOuB,GACPC,QAAQD,MAAMA,EACf,CACD,OAAO,WACLH,EAAWK,OACZ,CACF,GAAE,CAACT,IAEChB,EAGHA,EAAMK,KAAKqB,OAAS,GAAI,SAAC,IAAD,WAAS,SAAC3B,EAAD,CAAUC,MAAOA,OAClD,SAAC,IAAD,yDAJiB,IAMpB,C","sources":["components/MoviesDetails/MoviesDetails.styled.jsx","components/Reviews/Reviews.styled.jsx","components/CastList/CastList.jsx","pages/Cast.jsx"],"sourcesContent":["import { NavLink } from \"react-router-dom\";\nimport styled from \"styled-components\"\n\nexport const Link = styled(NavLink)`\n    display: inline-block;\n    font-weight: 600;\n    padding: 10px 16px;\n    opacity: 0.6;\n    text-decoration: none;\n    color: rgba(14, 14, 14, 0.885);\n    transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    cursor: pointer;\n    outline: none;\n\n     &:hover {\n    opacity: 1;\n    }\n`;\n\nexport const CardBox = styled.div`\n    display: flex;\n    align-items: flex-start;\n    justify-content: center;\n    gap: 10px;\n    width: 100%;\n`\nexport const TextBox = styled.div`\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n    justify-content: space-evenly;\n    width: 60%;\n`\nexport const Title = styled.h2`\n  font-size: 16px;\n`","import styled from \"styled-components\";\n\nexport const Item = styled.li`\n&:not(:last-child) {\n    margin-bottom: 20px;\n}\n`\nexport const Text = styled.p`\nmargin-left: 200px;\nmargin-bottom: 20px;\n`","import PropTypes from 'prop-types';\nimport { posterParam } from '../../config'\nimport { Gallery } from \"../MoviesList/MoviesList.styled\";\nimport { CardBox, TextBox } from \"../MoviesDetails//MoviesDetails.styled\";\n\nexport const CastList = ({movie}) => {\n    const { postersUrl, altProfileUrl, postersSize } = posterParam;\n    return (\n    <Gallery>\n        {movie && movie.cast.map(({ id, name, profile_path, character }) => {\n        const src = (profile_path === null) ? altProfileUrl : (`${postersUrl+postersSize+profile_path}`);\n            return (\n                <li key={id}>\n                    <CardBox>\n                        <img src={src} alt={name} width='100' />\n                        <TextBox>\n                            <h3>{name}</h3>\n                            {character && <p>Character: {character}</p>}\n                        </TextBox>\n                    </CardBox>\n                </li>   \n            )\n      })} \n    </Gallery>\n    )\n}\n\nCastList.propTypes = {\n    movie: PropTypes.object.isRequired,\n};","import { useState, useEffect } from \"react\";\nimport { useLocation  } from \"react-router-dom\";\nimport TheMoviedb from \"components/TheMoviedb.API/TheMoviedb.API\";\nimport { CastList } from \"components/CastList/CastList\";\nimport { Section } from \"components/Layout/Layout.styled\";\nimport { Text } from \"components/Reviews/Reviews.styled\";\n\nconst Cast = () => {\n  const [movie, setMovie] = useState(null);\n  const location = useLocation();\n  const MovieId = location.state.id;\n\n  useEffect(() => {\n    const controller = new AbortController();\n    try {\n      (async function fetchMovie() {\n        const movie = await TheMoviedb.fetchMovieCredits(MovieId);\n        setMovie(movie)\n      })();\n    } catch (error) {\n      console.error(error);\n    }\n    return () => {\n      controller.abort()\n    };\n  }, [MovieId]);\n\n  if (!movie) return null;\n\n  return (\n    movie.cast.length > 0 ? <Section><CastList movie={movie}></CastList></Section> :\n    <Text>We don't have any casts for this movie :( </Text>\n  );\n}\n\nexport default Cast;"],"names":["Link","styled","NavLink","CardBox","TextBox","Title","Item","Text","CastList","movie","postersUrl","posterParam","altProfileUrl","postersSize","cast","map","id","name","profile_path","character","src","alt","width","useState","setMovie","MovieId","useLocation","state","useEffect","controller","AbortController","TheMoviedb","error","console","abort","length"],"sourceRoot":""}