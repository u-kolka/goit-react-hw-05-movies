{"version":3,"file":"static/js/267.1c475335.chunk.js","mappings":"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","sources":["components/MoviesDetails/MoviesDetails.styled.jsx","components/Genres.jsx","components/MoviesDetails/MoviesDetailsItem.jsx","components/BackLink/BackLink.styled.jsx","components/BackLink/BackLink.jsx","components/MoviesDetails/MoviesDetailsMore.jsx","pages/MoviesDetails.jsx"],"sourcesContent":["import { NavLink } from \"react-router-dom\";\nimport styled from \"styled-components\"\n\nexport const Link = styled(NavLink)`\n    display: inline-block;\n    font-weight: 600;\n    padding: 10px 16px;\n    opacity: 0.6;\n    text-decoration: none;\n    color: rgba(14, 14, 14, 0.885);\n    transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    cursor: pointer;\n    outline: none;\n\n     &:hover {\n    opacity: 1;\n    }\n`;\n\nexport const CardBox = styled.div`\n    display: flex;\n    align-items: flex-start;\n    justify-content: center;\n    gap: 10px;\n    width: 100%;\n`\nexport const TextBox = styled.div`\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n    justify-content: space-evenly;\n    width: 60%;\n`\nexport const Title = styled.h2`\n  font-size: 16px;\n`","const genres = [\n  { id: 28, name: 'Action' },\n  { id: 12, name: 'Adventure' },\n  { id: 16, name: 'Animation' },\n  { id: 35, name: 'Comedy' },\n  { id: 80, name: 'Crime' },\n  { id: 99, name: 'Documentary' },\n  { id: 18, name: 'Drama' },\n  { id: 10751, name: 'Family' },\n  { id: 14, name: 'Fantasy' },\n  { id: 36, name: 'History' },\n  { id: 27, name: 'Horror' },\n  { id: 10402, name: 'Music' },\n  { id: 9648, name: 'Mystery' },\n  { id: 10749, name: 'Romance' },\n  { id: 878, name: 'Science Fiction' },\n  { id: 10770, name: 'TV Movie' },\n  { id: 53, name: 'Thriller' },\n  { id: 10752, name: 'War' },\n  { id: 37, name: 'Western' },\n];\n\n\nexport function genersForFilmCard(arrayOfGenersID) {\n  const arrayOfGenres = arrayOfGenersID.map(({ id }) => {\n    return genres.find(genre => genre.id === id).name\n  }).join(', ');\n  return arrayOfGenres;\n}","import PropTypes from 'prop-types';\nimport { genersForFilmCard } from \"components/Genres\";\nimport { posterParam } from '../../config'\nimport { CardBox, TextBox } from \"./MoviesDetails.styled\";\n\nexport function MoviesDetailsItem({ genres, overview, rating, poster, date, title }) {\n\n    const { postersUrl, altPosterUrl, postersSize } = posterParam;\n    const src = (poster === null) ? altPosterUrl : (`${postersUrl + postersSize + poster}`);\n    \n    return (\n        <CardBox>\n            <img src={src} alt={title} width='250px' height='375px'/>\n            <TextBox>\n                <h2>{title} {date.slice(0, 4)}</h2>\n                <p>Rating: {rating.toFixed(1)}</p>\n                <h3>Overview</h3>\n                <p>{overview}</p>\n                <h3>Genres</h3>\n                <p>{genersForFilmCard(genres)}</p>\n            </TextBox>\n        </CardBox>\n    )\n};\n\nMoviesDetailsItem.propTypes = {\n    genres: PropTypes.array.isRequired,\n    overview: PropTypes.string.isRequired,\n    rating: PropTypes.number.isRequired,\n    poster: PropTypes.string,\n    date: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n};","import styled from \"styled-components\"\nimport { Link } from \"components/MoviesDetails/MoviesDetails.styled\";\n\nexport const StyledLink = styled(Link)`\nposition: absolute;\ntop: 50px;\n`","import PropTypes from 'prop-types';\nimport { StyledLink } from './BackLink.styled';\n\nexport const BackLink = ({to, children }) => {\n\n  return (\n    <StyledLink to={to}>\n      {children}\n    </StyledLink>\n  );\n};\n\nBackLink.propTypes = {\n  to: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.object,]),\n  children: PropTypes.string.isRequired,\n};","import PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\nimport { Link, Title } from \"components/MoviesDetails/MoviesDetails.styled\";\nimport { BackLink } from '../BackLink/BackLink'\n\nconst navItems = [\n    { href: 'cast', text: 'Cast' },\n    { href: 'reviews', text: 'Reviews' },\n];\n\nexport const MoviesDetailsMore = ({ id }) => {\n    const location = useLocation();\n    const backLinkHref = location.state?.from ?? `/`\n\n  return (<>\n      <BackLink to={backLinkHref}>Go back</BackLink>\n      <Title>Additional information</Title>\n    <ul>\n      {navItems.map(({ href, text }) =>\n        <Link key={href} to={href} state={{ id, from: backLinkHref }}>\n          {text} \n        </ Link>)}\n    </ul>\n  </>\n  )\n}\n\nMoviesDetailsMore.propTypes = {\n    id: PropTypes.string.isRequired,\n};\n","import { useState, useEffect, Suspense } from \"react\";\nimport { useParams, Outlet } from \"react-router-dom\";\nimport TheMoviedb from \"components/TheMoviedb.API/TheMoviedb.API\";\nimport { MoviesDetailsItem } from \"components/MoviesDetails/MoviesDetailsItem\";\nimport { MoviesDetailsMore } from \"components/MoviesDetails/MoviesDetailsMore\";\n\nconst MoviesDetails = () => {\n  const [movie, setMovie] = useState(null);\n  const {id} = useParams(); \n\n  useEffect(() => {\n    const controller = new AbortController();\n    try {\n      (async function fetchMovie() {\n        const movie = await TheMoviedb.fetchMovieByID(id);\n        setMovie(prevMovie => {\n          if (prevMovie !== movie) {\n            return movie;\n          }\n        })\n      })();\n    } catch (error) {\n      console.error(error);\n    }\n\n    return () => {\n      controller.abort()\n    };\n  }, [id]);\n  \n  if (!movie) {\n    return null;\n  }\n\n\n  const { genres, overview, vote_average, poster_path, release_date, title } = movie;\n\n  return (\n    <main>\n      <MoviesDetailsItem genres={genres} overview={overview} rating={vote_average} poster={poster_path} date={release_date} title={title}></MoviesDetailsItem>\n      <MoviesDetailsMore id={id}></MoviesDetailsMore>\n      <Suspense>\n        <Outlet></Outlet>\n      </Suspense>\n    </main>\n  );\n};\n\nexport default MoviesDetails;"],"names":["Link","styled","NavLink","CardBox","TextBox","Title","genres","id","name","genersForFilmCard","arrayOfGenersID","map","find","genre","join","MoviesDetailsItem","overview","rating","poster","date","title","postersUrl","posterParam","altPosterUrl","postersSize","src","alt","width","height","slice","toFixed","StyledLink","BackLink","to","children","navItems","href","text","MoviesDetailsMore","backLinkHref","useLocation","state","from","useState","movie","setMovie","useParams","useEffect","controller","AbortController","TheMoviedb","prevMovie","error","console","abort","vote_average","poster_path","release_date","Suspense"],"sourceRoot":""}